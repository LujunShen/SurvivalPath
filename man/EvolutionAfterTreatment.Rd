% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EvolutionAfterTreatment.R
\name{EvolutionAfterTreatment}
\alias{EvolutionAfterTreatment}
\title{Calculate the number of people (proportion) assigned to different branches after a certain
node is treated by a specified plan}
\usage{
EvolutionAfterTreatment(
df,
treepoint,
mytree,
source,
treatment
)
}
\arguments{
\item{df}{"data" in the return result of the survivalpath function}

\item{treepoint}{Numerical object;Specify the node for drawing the KM curve, which is in the survival tree}

\item{mytree}{"mytree" in the return result of the survivalpath function}

\item{source}{Raw data}

\item{treatment}{Choose treatment}
}
\value{
A dataframe whose rows and columns are the next node and treatment plan
}
\description{
Calculate the number of people (proportion) assigned to different branches after a
certain node is treated by a specified plan
}
\details{
By specifying the node, using mytree to calculate the relevant branch variables and subsequent nodes,
and using the original data to calculate, filter out the group of subjects who branch to the next node after
the node adopts different treatment plans. Calculate the number of people assigned to different nodes according
to different treatment methods (proportion).
}
\examples{
data("dataset")
dataset = timedivision(X2021data,"ID","Date",period = 90,left_interval = 0.5,right_interval=1.5)

time <- list()
status <- list()
tsdata <- list()
tsid <- list()

treatment <- list()
for (i in 1:10){

 data <- dataset[dataset['timenode']==i,]

 time <- c(time,list(data['OStime_new']))

 status <- c(status,list(data['Status_new']))

 tsid <- c(tsid,list(data['ID']))

 c_data <- subset(data, select = c('Age','Amount of Hepatic Lesions','Largest Diameter of Hepatic Lesions (mm)','New Lesion','Vascular Invasion','Local Lymph Node Metastasis',
                                   'Distal Metastasis','Ascites','Massive Ascites','Moderate or Mild Ascites'
                                   ,'Infected with Hepatitis','ALB',"TBLT",'PT',"AFP"))

 tsdata <- c(tsdata,list(c_data))

 c_treatment <- subset(data, select = c("Treatment2"))

 treatment <- c(treatment,list(c_treatment))
}

tsdata <- classifydata(time,status,tsdata,tsid,cutoff=365*1)

result <- survivalpath(time,status,tsdata[[1]],tsid,time_slices = 10,treatments = treatment,p.value=0.05,degreeofcorrelation=0.7)

mytree <- result$tree
ggtree(mytree, color="black",linetype=1,size=1.2,ladderize = T, )+
 theme_tree2() +
 geom_text2(aes(label=label),hjust=0.6, vjust=-0.6 ,size=3.0)+
 geom_text2(aes(label=paste(node,size,mytree@data$survival,mytree@data$survivalrate,sep = "/")),hjust=0.6, vjust=-1.85 ,size=3.0)+
 #geom_point2(aes(shape=isTip, color=isTip), size=mytree1@data$os/40)+
 geom_point2(aes(shape=isTip, color=isTip), size=mytree@data$size\%/\%200+1,show.legend=F)+
 #guides(color=guide_legend(title="node name/sample number/Median survival time/Survival rate")) +
 labs(size= "Nitrogen",
      x = "TimePoints",
      y = "Survival",
      subtitle = "node_name/sample number/Median survival time/Survival rate",
      title = "Survival Tree") +
 theme(legend.title=element_blank(),legend.position = c(0.1,0.9))

#plot KM curve
treepoints = c(16,23)
plotKM(result$data, treepoints,mytree,risk.table=T)
#Comparing the efficacy of treatment methods by drawing survival curves
treepoints = c(17,22)
compareTreatmentPlans(result$data, treepoints,mytree,dataset,"Treatment")

treepoint=16
A = EvolutionAfterTreatment(result$data, treepoint,mytree,dataset,"Treatment")
mytable <- xtabs(~ `Treatment2`+treepoint, data=A)
prop.table(mytable,1)

}
